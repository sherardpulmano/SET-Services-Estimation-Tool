<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_9006_srv_est_tl_quotes</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_9006_srv_est_tl_quotes">service_offeringsISNOTEMPTY^EQ<item endquery="false" field="service_offerings" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Service Offerings on Insert</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	// Add your code here
	var so = [current.service_offerings];
	for (i=0; i < so.length; i++) {
		//gs.info('each so'+so[i]);
		var cItem = this.chkItem(current.sys_id, so[i]);
		if (cItem == false) {
			var gr = new GlideRecord("x_9006_srv_est_tl_work_type");
			gr.addQuery("services_offering", so[i]);
			gr.query();
			while (gr.next()) {
				x = this.addItem(current.sys_id, gr.sys_id);
			}
		}
		
	}
	
})(current, previous);

function addItem(sid, off) {
	var ar = new GlideRecord("x_9006_srv_est_tl_work_item");
	ar.initialize();
	ar.name = off;
	ar.quote = sid;
	ar.insert();
	return ar;
}

function chkItem(id, sv) {
	var fr = new GlideRecord("x_9006_srv_est_tl_work_item");
	fr.addQuery("quote", id);
	fr.addQuery("name.services_offering", sv);
	fr.query();
	if (!fr.next()) {
		return false;
	} else {
		return true;
	}
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>spulmano</sys_created_by>
        <sys_created_on>2017-07-05 14:15:31</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3bcd08150fb332009a954e9ce1050e89</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Service Offerings on Insert</sys_name>
        <sys_overrides/>
        <sys_package display_value="Services Estimation Tool" source="x_9006_srv_est_tl">033988030f2332009a954e9ce1050e3e</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Services Estimation Tool">033988030f2332009a954e9ce1050e3e</sys_scope>
        <sys_update_name>sys_script_3bcd08150fb332009a954e9ce1050e89</sys_update_name>
        <sys_updated_by>spulmano</sys_updated_by>
        <sys_updated_on>2017-07-05 14:41:09</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=3bcd08150fb332009a954e9ce1050e89"/>
</record_update>
